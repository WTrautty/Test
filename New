import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from pandas.tseries.offsets import MonthEnd

# === Configuration ===
EXCEL_PATH = r"C:\Users\AD39644\Downloads\data (5).xlsx"
EXPORT_HTML = r"C:\Users\AD39644\OneDrive - Lumen\Federal Service Delivery - Scripting Archive\Dashboards.html"
TAB_MIN_ENTRIES = 100
top_performer_name = "Davis, Walter (Walter)"
top_label = "Top Performer"
ADDITIONAL_EXCEL = r"C:\Users\AD39644\Desktop\EIS\OneDrive_2024-07-25\Auditing Script\Outlook_Calendars.xlsx"

# === Load and preprocess main data ===
df = pd.read_excel(EXCEL_PATH, engine='openpyxl')
df = df[['Task Owner', 'Closure Code 1', 'Completed Date']].dropna()
df['Completed Date'] = pd.to_datetime(df['Completed Date'], errors='coerce')
df = df.dropna(subset=['Completed Date'])
df['Month'] = df['Completed Date'].dt.to_period('M').astype(str)

# === Global Charts ===
df['Is Fail'] = df['Closure Code 1'].str.lower().str.contains('fail')

fail_rate = df.groupby('Month')['Is Fail'].mean().reset_index()
fail_rate['Fail %'] = fail_rate['Is Fail'] * 100
fail_line_fig = px.line(fail_rate, x='Month', y='Fail %', title='Global Failure Rate per Month')
fail_line_fig.update_layout(yaxis=dict(range=[0, 100]))
fail_line_html = fail_line_fig.to_html(full_html=False, include_plotlyjs=False)

global_pie = df['Closure Code 1'].value_counts(normalize=True) * 100
global_pie_df = global_pie.reset_index()
global_pie_df.columns = ['Closure Code', 'Percentage']
closure_pie_fig = px.pie(global_pie_df, names='Closure Code', values='Percentage',
                         title="Global Closure Code Distribution")
closure_pie_fig.update_layout(height=400)
closure_pie_html = closure_pie_fig.to_html(full_html=False, include_plotlyjs=False)

closed_monthly = df.groupby('Month').size().reset_index(name='Closed Orders')
closed_line_fig = px.line(closed_monthly, x='Month', y='Closed Orders', title="Global Closed Orders Per Month")
closed_line_html = closed_line_fig.to_html(full_html=False, include_plotlyjs=False)

# === Scheduling Tab ===
xls = pd.read_excel(ADDITIONAL_EXCEL, sheet_name=None, engine='openpyxl')
monthly_rows_per_tab = []
for sheet, data in xls.items():
    if "End" in data.columns:
        data = data.dropna(subset=['End']).copy()
        data['End'] = pd.to_datetime(data['End'], errors='coerce')
        data = data.dropna(subset=['End'])
        data['Month'] = data['End'].dt.to_period("M").astype(str)
        grouped = data.groupby('Month').size().reset_index(name='Count')
        grouped['Tab'] = sheet
        monthly_rows_per_tab.append(grouped)

sched_df = pd.concat(monthly_rows_per_tab)

avg_tab_fig = px.bar(sched_df.groupby('Tab')['Count'].mean().reset_index(),
                     x='Tab', y='Count', title="Average Rows per Tab per Month")
avg_tab_html = avg_tab_fig.to_html(full_html=False, include_plotlyjs=False)

total_monthly_fig = px.line(sched_df.groupby('Month')['Count'].sum().reset_index(name='Total Rows'),
                            x='Month', y='Total Rows', title="Total Rows Across All Tabs")
total_monthly_html = total_monthly_fig.to_html(full_html=False, include_plotlyjs=False)

workday_data = []
for month, group in sched_df.groupby('Month'):
    total = group['Count'].sum()
    y, m = map(int, month.split('-'))
    start = pd.Timestamp(y, m, 1)
    end = start + MonthEnd(0)
    weekdays = pd.date_range(start, end, freq='B')
    workday_data.append({'Month': month, 'Avg Per Workday': total / len(weekdays)})

workday_df = pd.DataFrame(workday_data)
workday_fig = px.bar(workday_df, x='Month', y='Avg Per Workday', title="Average Rows per Workday")
workday_html = workday_fig.to_html(full_html=False, include_plotlyjs=False)

# === Final HTML Output ===
html_output = """
<!DOCTYPE html>
<html>
<head>
    <title>Closure Code Dashboard</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            background: #f5f5f5; 
            margin: 0; 
            padding: 20px; 
        }
        .main-tab-buttons { 
            text-align: center;
            margin-bottom: 20px;
            position: sticky;
            top: 0;
            background: #f5f5f5;
            padding: 10px;
            z-index: 1000;
        }
        .maintablink {
            background-color: #e0e0e0;
            border: none;
            padding: 12px 24px;
            margin: 0 5px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s;
        }
        .maintablink:hover {
            background-color: #d0d0d0;
        }
        .maintablink.active {
            background-color: #007bff;
            color: white;
        }
        .main-tab {
            display: none;
        }
        .main-tab.active {
            display: block;
        }
        .tabcontent {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            max-width: 1400px;
            margin-left: auto;
            margin-right: auto;
        }
        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
        }
        h2 {
            color: #444;
            margin-bottom: 20px;
        }
        hr {
            border: none;
            border-top: 1px solid #eee;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <h1>Closure Code Dashboard</h1>
    
    <div class="main-tab-buttons">
        <button class="maintablink active" onclick="switchMainTab(event, 'globalTab')">Global Statistics</button>
        <button class="maintablink" onclick="switchMainTab(event, 'schedulingTab')">Scheduling</button>
    </div>

    <div id="globalTab" class="main-tab active">
        <div class="tabcontent">
            <h2>Global Statistics</h2>
            {fail_line_html}
            <hr>
            {closure_pie_html}
            <hr>
            {closed_line_html}
        </div>
    </div>

    <div id="schedulingTab" class="main-tab">
        <div class="tabcontent">
            <h2>Scheduling Dashboard</h2>
            {avg_tab_html}
            <hr>
            {total_monthly_html}
            <hr>
            {workday_html}
        </div>
    </div>

    <script>
        function switchMainTab(evt, tabName) {{
            // Hide all tabs
            let tabs = document.getElementsByClassName('main-tab');
            for (let t of tabs) {{
                t.classList.remove('active');
            }}
            
            // Remove active class from all buttons
            let buttons = document.getElementsByClassName('maintablink');
            for (let b of buttons) {{
                b.classList.remove('active');
            }}
            
            // Show the selected tab
            document.getElementById(tabName).classList.add('active');
            evt.currentTarget.classList.add('active');
            
            // Trigger resize to ensure plots render correctly
            setTimeout(() => window.dispatchEvent(new Event('resize')), 200);
        }}

        // Ensure plots render correctly on initial load
        window.addEventListener('load', function() {{
            setTimeout(() => window.dispatchEvent(new Event('resize')), 200);
        }});
    </script>
</body>
</html>
""".format(
    fail_line_html=fail_line_html,
    closure_pie_html=closure_pie_html,
    closed_line_html=closed_line_html,
    avg_tab_html=avg_tab_html,
    total_monthly_html=total_monthly_html,
    workday_html=workday_html
)

# Write to the final output file
with open(EXPORT_HTML, 'w', encoding='utf-8') as f:
    f.write(html_output)
print(f"âœ… Dashboard created at: {EXPORT_HTML}")
