import pandas as pd

def reformat_audit_sheet(sheet_df, sheet_name):
    row = sheet_df.iloc[0]
    criteria = []

    # Process columns in groups of three: MEASURE, WEIGHT, SCORE
    for i in range(0, len(row), 3):
        try:
            label = row[i]
            score_type = row[i+2]
            if pd.notna(label) and pd.notna(score_type):
                col_base = str(label).strip().replace(' ', '_').replace('/', '_').replace('(', '').replace(')', '')
                criteria.append({
                    "criterion": label,
                    "score_col": f"{col_base}_Score",
                    "notes_col": f"{col_base}_Notes",
                    "score_type": score_type
                })
        except IndexError:
            break

    # Build a new DataFrame with empty values, one row per audit
    data = {
        "AuditName": [sheet_name],
        "AuditDate": [""]
    }

    for crit in criteria:
        data[crit["score_col"]] = [""]
        data[crit["notes_col"]] = [""]

    return pd.DataFrame(data)

def reformat_workbook(input_path, output_path):
    xls = pd.ExcelFile(input_path)
    with pd.ExcelWriter(output_path, engine='xlsxwriter') as writer:
        for sheet_name in xls.sheet_names:
            df = xls.parse(sheet_name)
            clean_df = reformat_audit_sheet(df, sheet_name)
            clean_df.to_excel(writer, sheet_name=sheet_name, index=False)
    print(f"Reformatted workbook saved to: {output_path}")

# Example usage
if __name__ == "__main__":
    input_file = "audit_templates.xlsx"  # Replace this with your input file name
    output_file = "audit_templates_reformatted.xlsx"
    reformat_workbook(input_file, output_file)
