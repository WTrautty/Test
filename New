def generate_failure_analysis_tab(df):
    from scipy.stats import pearsonr
    import plotly.graph_objects as go

    # Ensure necessary columns are present
    if "Revised LEC" not in df.columns or "Task Owner" not in df.columns:
        return "<div id='failureTab' class='main-tab'><h2>Required columns not found.</h2></div>"

    df = df.copy()
    df["Is Fail"] = df["Closure Code 1"].str.lower().str.contains("fail|failed|failure", na=False)
    
    # Encode categorical variables
    lec_encoded = df["Revised LEC"].astype("category").cat.codes
    owner_encoded = df["Task Owner"].astype("category").cat.codes
    fail_labels = df["Is Fail"].astype(int)

    # Calculate Pearson correlation
    lec_corr, lec_pval = pearsonr(lec_encoded, fail_labels)
    owner_corr, owner_pval = pearsonr(owner_encoded, fail_labels)

    # Prepare chart
    fig = go.Figure(data=[
        go.Bar(
            x=["Revised LEC", "Task Owner"],
            y=[lec_corr, owner_corr],
            text=[
                f"p={lec_pval:.4f}",
                f"p={owner_pval:.4f}"
            ],
            textposition="outside",
            marker_color=["#1f77b4", "#ff7f0e"]
        )
    ])

    fig.update_layout(
        title="Pearson Correlation with Failure",
        yaxis_title="Pearson Coefficient",
        yaxis=dict(range=[-1, 1]),
        height=400
    )

    return f"""
    <div id="failureTab" class="main-tab">
      <h2>Failure Analysis</h2>
      <p>This chart shows how strongly 'Revised LEC' and 'Task Owner' are correlated with failure outcomes.</p>
      {fig.to_html(full_html=False, include_plotlyjs=False)}
    </div>
    """
