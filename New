import win32com.client
import pandas as pd
import tempfile
import os

def get_sender_email(message):
    try:
        exch_user = message.Sender.GetExchangeUser()
        if exch_user is not None:
            return exch_user.PrimarySmtpAddress
    except Exception:
        pass
    return message.SenderEmailAddress

# Outlook namespace
outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")

# ====== Choose mailbox ======
# Default Inbox:
inbox = outlook.GetDefaultFolder(6)

# If you want a different mailbox:
# mailbox = outlook.Folders.Item("Shared Mailbox Name")
# inbox = mailbox.Folders.Item("Inbox")
# =====================================

messages = inbox.Items
messages.Sort("[ReceivedTime]", True)

print("\nScanning emails for CSV attachments...\n")

# Change these to what you want
TARGET_SENDER = "someoneelse@domain.com"
TARGET_SUBJECT_KEYWORD = "monthly report"

all_dataframes = []
count = 0
index = 0

for message in messages:
    index += 1
    try:
        sender_resolved = get_sender_email(message) or ""
        subject = message.Subject or ""
        received_time = str(message.ReceivedTime)

        print(f"\n=== Email #{index} ===")
        print(f"Sender: {sender_resolved}")
        print(f"Subject: {subject}")

        sender_match = sender_resolved.lower() == TARGET_SENDER.lower()
        subject_match = TARGET_SUBJECT_KEYWORD.lower() in subject.lower()

        print(f"Sender match: {sender_match}")
        print(f"Subject match: {subject_match}")

        if sender_match and subject_match:
            attachments = message.Attachments
            print(f"Attachments count: {attachments.Count}")

            for i in range(1, attachments.Count + 1):
                attachment = attachments.Item(i)
                filename = attachment.FileName
                print(f"Found attachment: {filename}")

                # Check if it's a CSV file
                if filename.lower().endswith(".csv"):
                    print(f"Processing CSV attachment: {filename}")

                    # Save attachment to temp file
                    with tempfile.NamedTemporaryFile(delete=False, suffix=".csv") as tmp_file:
                        temp_path = tmp_file.name

                    attachment.SaveAsFile(temp_path)

                    # Read the CSV file into a DataFrame
                    df = pd.read_csv(temp_path)
                    print(f"Rows read: {len(df)}")

                    # Add source info
                    df["Source Email"] = subject
                    df["Received Time"] = received_time

                    all_dataframes.append(df)

                    # Clean up temp file
                    os.unlink(temp_path)

            count += 1

    except Exception as e:
        print(f"Skipping item due to error: {e}")
        continue

print(f"\nFinished scanning. Emails processed: {count}")

# Combine and export
if all_dataframes:
    combined_df = pd.concat(all_dataframes, ignore_index=True)
    combined_df.to_excel("combined_attachments.xlsx", index=False)
    print("\nExported combined CSV data to 'combined_attachments.xlsx'")
else:
    print("\nNo matching CSV attachments found.")
