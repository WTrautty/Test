    # === Bar + Line Chart: Monthly Unique Task Owners and Failure Rate ===
    summary = (
        df.groupby("Month")
          .agg(
              Unique_Owners=("Task Owner", pd.Series.nunique),
              Failure_Rate=("Is Fail", "mean")
          )
          .reset_index()
    )
    summary["Failure_Rate"] = (summary["Failure_Rate"] * 100).round(1)

    if not summary.empty:
        combo_fig = go.Figure()

        # Bar for unique owners
        combo_fig.add_trace(go.Bar(
            x=summary["Month"],
            y=summary["Unique_Owners"],
            name="Unique Task Owners",
            marker_color="lightblue",
            yaxis="y1"
        ))

        # Line for failure rate
        combo_fig.add_trace(go.Scatter(
            x=summary["Month"],
            y=summary["Failure_Rate"],
            name="Failure Rate (%)",
            yaxis="y2",
            mode="lines+markers",
            marker=dict(color="crimson")
        ))

        combo_fig.update_layout(
            title="Monthly Failure Rate and Unique Task Owners",
            xaxis_title="Month",
            yaxis=dict(
                title="Unique Task Owners",
                side="left",
                showgrid=False
            ),
            yaxis2=dict(
                title="Failure Rate (%)",
                overlaying="y",
                side="right",
                range=[0, 100]
            ),
            legend=dict(x=0.01, y=0.99),
            height=500
        )

        combo_html = combo_fig.to_html(full_html=False, include_plotlyjs=False)
    else:
        combo_html = "<p><i>Insufficient data to render task owner/failure chart.</i></p>"
