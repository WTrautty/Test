def main():
    try:
        df = pd.read_excel(EXCEL_PATH, engine="openpyxl")
    except Exception:
        raise

    try:
        frat_df = pd.read_excel(FRAT_PATH, engine="openpyxl")
    except Exception as e:
        raise RuntimeError(f"Failed to load FRAT Excel file: {e}")

    validate_columns(df, ["Task Owner", "Closure Code 1", "Completed Date"], EXCEL_PATH)
    df = df.dropna(subset=["Task Owner", "Closure Code 1", "Completed Date"])
    df["Completed Date"] = pd.to_datetime(df["Completed Date"], errors="coerce")
    df = df.dropna(subset=["Completed Date"])
    df["Month"] = df["Completed Date"].dt.to_period("M").astype(str)
    df["Is Fail"] = df["Closure Code 1"].str.lower().str.contains("fail|failed|failure", na=False)

    html = build_dashboard_html(
        generate_global_tab(df),
        generate_individual_tab(df),
        generate_scheduling_tab(),
        generate_lec_tab(df),
        generate_failure_analysis_tab(df),
        generate_frat_tab(frat_df),
        generate_barry_task_owner_pie(),
        generate_barry_mac_pie_tab()
    )

    with open(EXPORT_HTML, "w", encoding="utf-8") as f:
        f.write(html)
