# === LINE CHART: % Fail Codes (with Global Average) ===
fail_data = owner_data.copy()
fail_data['Is Fail'] = fail_data['Closure Code 1'].str.lower().str.contains('fail')

# Owner's monthly fail %
monthly_total = fail_data.groupby('Month').size()
monthly_fails = fail_data.groupby('Month')['Is Fail'].sum()
owner_fail_pct = (monthly_fails / monthly_total * 100).reset_index(name='Fail %')

# Global fail %
df['Is Fail'] = df['Closure Code 1'].str.lower().str.contains('fail')
global_fail = df.groupby(['Month', 'Task Owner'])['Is Fail'].mean().reset_index()
global_avg_fail = global_fail.groupby('Month')['Is Fail'].mean().reset_index()
global_avg_fail.columns = ['Month', 'Global Avg Fail %']
global_avg_fail['Global Avg Fail %'] *= 100  # convert to percent

# Merge for alignment
fail_merged = pd.merge(owner_fail_pct, global_avg_fail, on='Month', how='outer').sort_values('Month')

# Plot
fail_fig = go.Figure()
fail_fig.add_trace(go.Scatter(
    x=fail_merged['Month'],
    y=fail_merged['Fail %'],
    mode='lines+markers',
    name=f"{owner} % Fail",
    line=dict(color='orange')
))
fail_fig.add_trace(go.Scatter(
    x=fail_merged['Month'],
    y=fail_merged['Global Avg Fail %'],
    mode='lines+markers',
    name="Global Avg % Fail",
    line=dict(color='red', dash='dash')
))
fail_fig.update_layout(
    title=f"{owner} â€“ Percent of Orders Marked as 'Fail' per Month",
    xaxis_title='Month',
    yaxis_title='Failure Rate (%)',
    height=400,
    margin=dict(t=60, l=40, r=40, b=40),
    hovermode='x unified'
)

fail_html = fail_fig.to_html(full_html=False, include_plotlyjs=False, config={'responsive': True})
