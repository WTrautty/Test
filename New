def main():
    import pandas as pd

    # === Load Data for Both Customers ===
    try:
        df_shawn = pd.read_excel(EXCEL_PATH, engine="openpyxl")
        df_barry = pd.read_excel(BARRY_EXCEL_PATH, engine="openpyxl")
    except Exception as e:
        raise RuntimeError(f"Error loading Excel files: {e}")

    # === Validate and Preprocess Shawn ===
    validate_columns(df_shawn, ["Task Owner", "Closure Code 1", "Completed Date"], "Shawn Data")
    df_shawn = df_shawn.dropna(subset=["Task Owner", "Closure Code 1", "Completed Date"])
    df_shawn["Completed Date"] = pd.to_datetime(df_shawn["Completed Date"], errors="coerce")
    df_shawn = df_shawn.dropna(subset=["Completed Date"])
    df_shawn["Month"] = df_shawn["Completed Date"].dt.to_period("M").astype(str)
    df_shawn["Is Fail"] = df_shawn["Closure Code 1"].str.lower().str.contains("fail|failed|failure", na=False)

    # === Validate and Preprocess Barry ===
    validate_columns(df_barry, ["Task Owner", "Closure Code 1", "Completed Date"], "Barry Data")
    df_barry = df_barry.dropna(subset=["Task Owner", "Closure Code 1", "Completed Date"])
    df_barry["Completed Date"] = pd.to_datetime(df_barry["Completed Date"], errors="coerce")
    df_barry = df_barry.dropna(subset=["Completed Date"])
    df_barry["Month"] = df_barry["Completed Date"].dt.to_period("M").astype(str)
    df_barry["Is Fail"] = df_barry["Closure Code 1"].str.lower().str.contains("fail|failed|failure", na=False)

    # === Generate HTML Sections for Each Customer ===
    def customer_block(customer_id, df):
        return f"""
        <div class="customer-container" id="customer-{customer_id}" style="display:{'block' if customer_id == 'shawn' else 'none'};">
          <div class="sidebar">
            <h2>{customer_id.capitalize()} Dashboard</h2>
            <button onclick="switchMainTab(event, 'globalTab-{customer_id}')">Global</button>
            <button onclick="switchMainTab(event, 'individualTab-{customer_id}')">Individual</button>
            <button onclick="switchMainTab(event, 'schedulingTab-{customer_id}')">Scheduling</button>
            <button onclick="switchMainTab(event, 'lecTab-{customer_id}')">LEC</button>
            <button onclick="switchMainTab(event, 'failureTab-{customer_id}')">Failure Analysis</button>
          </div>
          <div class="main-content">
            <h1>{customer_id.capitalize()} Data</h1>
            {generate_global_tab(df).replace('id="globalTab"', f'id="globalTab-{customer_id}')}
            {generate_individual_tab(df).replace('id="individualTab"', f'id="individualTab-{customer_id}')}
            {generate_scheduling_tab().replace('id="schedulingTab"', f'id="schedulingTab-{customer_id}')}
            {generate_lec_tab(df).replace('id="lecTab"', f'id="lecTab-{customer_id}')}
            {generate_failure_analysis_tab(df).replace('id="failureTab"', f'id="failureTab-{customer_id}')}
          </div>
        </div>
        """

    customer_switcher_html = """
    <div class="customer-switcher">
      <label for="customer-select">Customer:</label>
      <select id="customer-select" onchange="switchCustomer(this.value)">
        <option value="shawn" selected>Shawn</option>
        <option value="barry">Barry</option>
      </select>
    </div>
    """

    # === Final HTML Output ===
    html = f"""
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Customer Dashboard</title>
  <script src="plotly-latest.min.js"></script>
  <style>
    * {{ box-sizing: border-box; }}
    body {{
      font-family: 'Inter', 'Segoe UI', Tahoma, sans-serif;
      margin: 0;
      background-color: #f4f6f9;
      display: flex;
      color: #333;
    }}
    .sidebar {{
      width: 220px;
      background: #2f3542;
      color: #fff;
      height: 100vh;
      position: fixed;
      top: 0; left: 0;
      display: flex;
      flex-direction: column;
      padding-top: 30px;
    }}
    .sidebar h2 {{
      text-align: center;
      font-size: 20px;
      margin-bottom: 30px;
    }}
    .sidebar button {{
      padding: 15px 20px;
      border: none;
      background: none;
      color: white;
      text-align: left;
      width: 100%;
      font-size: 15px;
      cursor: pointer;
      transition: background 0.2s ease;
    }}
    .sidebar button:hover {{
      background: #57606f;
    }}
    .sidebar button.active {{
      background: #1e90ff;
    }}
    .main-content {{
      margin-left: 220px;
      padding: 30px;
      flex: 1;
    }}
    .main-tab {{
      display: none;
      background: white;
      padding: 30px;
      border-radius: 12px;
      margin-bottom: 40px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.06);
    }}
    .tab-buttons-wrapper {{
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 20px;
    }}
    .tablink {{
      padding: 10px 18px;
      border: none;
      background: #f1f1f1;
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      transition: background 0.3s ease;
    }}
    .tablink:hover {{
      background: #ddd;
    }}
    .tablink.active {{
      background: #38ef7d;
      color: white;
    }}
    .tabcontent {{
      display: none;
    }}
    .customer-switcher {{
      position: fixed;
      bottom: 20px;
      right: 20px;
      background: white;
      padding: 10px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      z-index: 1000;
    }}
    @media (max-width: 768px) {{
      .sidebar {{
        width: 100%;
        height: auto;
        flex-direction: row;
        justify-content: space-around;
        position: relative;
      }}
      .main-content {{
        margin-left: 0;
        padding: 20px;
      }}
    }}
  </style>
  <script>
    function switchMainTab(evt, tabId) {{
      var tabs = document.querySelectorAll('.main-tab');
      tabs.forEach(tab => tab.style.display = 'none');
      document.getElementById(tabId).style.display = 'block';

      var buttons = evt.currentTarget.parentNode.querySelectorAll('button');
      buttons.forEach(btn => btn.classList.remove('active'));
      evt.currentTarget.classList.add('active');

      window.dispatchEvent(new Event('resize'));
    }}

    function openTab(evt, tabId) {{
      var tabs = document.querySelectorAll('.tabcontent');
      tabs.forEach(tab => tab.style.display = 'none');
      document.getElementById(tabId).style.display = 'block';

      var buttons = document.querySelectorAll('.tablink');
      buttons.forEach(btn => btn.classList.remove('active'));
      evt.currentTarget.classList.add('active');

      window.dispatchEvent(new Event('resize'));
    }}

    function switchCustomer(customerId) {{
      document.querySelectorAll('.customer-container').forEach(el => el.style.display = 'none');
      document.getElementById(`customer-${customerId}`).style.display = 'block';
      window.dispatchEvent(new Event('resize'));
    }}

    window.onload = function () {{
      document.querySelector('#customer-shawn .main-tab').style.display = 'block';
      document.querySelector('#customer-shawn .sidebar button').classList.add('active');
    }};
  </script>
</head>
<body>
  {customer_block("shawn", df_shawn)}
  {customer_block("barry", df_barry)}
  {customer_switcher_html}
</body>
</html>
"""

    # === Export HTML to Disk ===
    with open(EXPORT_HTML, "w", encoding="utf-8") as f:
        f.write(html)
