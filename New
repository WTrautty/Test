import pandas as pd
import plotly.express as px
from scipy.stats import spearmanr

def correlation_unique_owners_vs_failrate(df):
    if "Completed Date" not in df.columns or "Task Owner" not in df.columns or "Closure Code 1" not in df.columns:
        return "<div><h3>Missing required columns.</h3></div>"

    df = df.copy()
    df["Month"] = pd.to_datetime(df["Completed Date"]).dt.to_period("M").astype(str)
    df["Is Fail"] = df["Closure Code 1"].str.lower().str.contains("fail|failed|failure", na=False).astype(int)

    # Group by month
    summary = (
        df.groupby("Month")
          .agg(
              Unique_Owners=("Task Owner", pd.Series.nunique),
              Failure_Rate=("Is Fail", "mean")
          )
          .reset_index()
    )
    summary["Failure_Rate"] = (summary["Failure_Rate"] * 100).round(1)

    if len(summary) < 3:
        return "<div><h3>Not enough data to compute correlation.</h3></div>"

    # Spearman correlation
    corr, pval = spearmanr(summary["Unique_Owners"], summary["Failure_Rate"])
    p_display = f"{pval:.3f}" if pval >= 0.001 else f"{pval:.1e}"
    annotation = f"Spearman r = {corr:.3f}, p = {p_display}"

    # Plot
    fig = px.scatter(
        summary,
        x="Unique_Owners",
        y="Failure_Rate",
        text="Month",
        trendline="ols",
        title=f"Failure Rate vs. Number of Unique Task Owners per Month<br><sup>{annotation}</sup>"
    )
    fig.update_traces(marker=dict(size=10), textposition="top center")
    fig.update_layout(height=500, xaxis_title="Unique Task Owners", yaxis_title="Failure Rate (%)")

    return fig.to_html(full_html=False, include_plotlyjs=True)
