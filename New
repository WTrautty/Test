import win32com.client
import pandas as pd

def get_sender_email(message):
    try:
        exch_user = message.Sender.GetExchangeUser()
        if exch_user is not None:
            return exch_user.PrimarySmtpAddress
    except Exception:
        pass
    return message.SenderEmailAddress

# Launch Outlook namespace
outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")

# ===== Adjust mailbox selection =====
# Example: default inbox
inbox = outlook.GetDefaultFolder(6)

# If you need a different mailbox:
# mailbox = outlook.Folders.Item("Shared Mailbox Name")
# inbox = mailbox.Folders.Item("Inbox")
# =====================================

messages = inbox.Items
messages.Sort("[ReceivedTime]", True)

print("\nScanning emails...\n")

email_data = []
count = 0
index = 0

for message in messages:
    index += 1
    try:
        subject = message.Subject or ""
        sender_resolved = get_sender_email(message) or ""
        sender_display = message.SenderName or ""
        received_time = str(message.ReceivedTime)
        body = message.Body or ""

        # Debug prints
        print(f"\n=== Email #{index} ===")
        print(f"Sender: {sender_resolved}")
        print(f"Subject: {subject}")

        # Matching logic
        sender_match = sender_resolved.lower() == "johndoe@aol.com"
        subject_match = "designated" in subject.lower()

        print(f"Sender match: {sender_match}")
        print(f"Subject match: {subject_match}")

        if sender_match and subject_match:
            print(">>>>> MATCH FOUND <<<<<")
            count += 1

            email_data.append({
                "Sender": sender_resolved,
                "Display Name": sender_display,
                "Subject": subject,
                "Received Time": received_time,
                "Body": body
            })

    except Exception as e:
        print(f"Skipping item due to error: {e}")
        continue

print(f"\nFinished scanning. Found {count} matching emails.")

# Export to Excel
if email_data:
    df = pd.DataFrame(email_data)
    df.to_excel("emails.xlsx", index=False)
    print("\nExported results to 'emails.xlsx'")
else:
    print("\nNo matching emails to export.")
