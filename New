from plotly.subplots import make_subplots

# === PIE CHARTS SIDE-BY-SIDE ===
# Prepare owner pie
owner_pie_data = owner_data['Closure Code 1'].value_counts().reset_index()
owner_pie_data.columns = ['Closure Code', 'Count']

# Prepare global pie
global_pie_data = df['Closure Code 1'].value_counts().reset_index()
global_pie_data.columns = ['Closure Code', 'Count']

# Create subplots with shared legend
pie_fig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]],
                        subplot_titles=[f"{owner}'s Closure Codes", "Global Closure Codes"])

pie_fig.add_trace(
    go.Pie(labels=owner_pie_data['Closure Code'], values=owner_pie_data['Count'], name=owner, textinfo='percent+label'),
    row=1, col=1
)
pie_fig.add_trace(
    go.Pie(labels=global_pie_data['Closure Code'], values=global_pie_data['Count'], name='Global', textinfo='percent+label', showlegend=False),
    row=1, col=2
)

pie_fig.update_layout(
    height=450,
    title_text=f"{owner} vs Global Closure Code Breakdown",
    showlegend=True,
    margin=dict(t=60, l=40, r=40, b=40)
)

# === LINE CHART ===
owner_monthly = owner_data.groupby('Month').size().reset_index(name='Completed')
line_fig = go.Figure()
line_fig.add_trace(go.Scatter(
    x=owner_monthly['Month'],
    y=owner_monthly['Completed'],
    mode='lines+markers',
    name=f'{owner} Monthly Completed',
    line=dict(color='blue')
))
line_fig.add_trace(go.Scatter(
    x=global_avg['Month'],
    y=global_avg['Average'],
    mode='lines+markers',
    name='Global Monthly Average',
    line=dict(color='red', dash='dash')
))
line_fig.update_layout(
    title=f"{owner} â€“ Monthly Completed Tasks vs Global Avg",
    xaxis_title='Month',
    yaxis_title='Tasks Completed',
    height=500,
    autosize=True,
    margin=dict(t=60, l=40, r=40, b=40),
    hovermode='x unified'
)

# Convert to HTML
combined_pie_html = pie_fig.to_html(full_html=False, include_plotlyjs=(i == 0), config={'responsive': True})
line_html = line_fig.to_html(full_html=False, include_plotlyjs=False, config={'responsive': True})

# Combine into tab
tab_buttons.append(f'<button class="tablink" onclick="openTab(event, \'{div_id}\')">{owner}</button>')
tab_contents.append(f'''
<div id="{div_id}" class="tabcontent" style="display:{'block' if i == 0 else 'none'}">
    {combined_pie_html}
    <hr>
    {line_html}
</div>
''')
