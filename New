import pandas as pd
import plotly.express as px
from dash import Dash, dcc, html
from dash.dependencies import Input, Output
import webbrowser
import threading

# === Configuration ===
EXCEL_PATH = r"C:\Path\To\Your\File.xlsx"  # <- Change this to your Excel file path
TAB_MIN_ENTRIES = 20

# === Load and Filter Data ===
df = pd.read_excel(EXCEL_PATH, engine='openpyxl')
df = df[['Task Owner', 'Closure Code 1']].dropna()

# Find Task Owners with at least 20 appearances
valid_owners = df['Task Owner'].value_counts()
filtered_owners = valid_owners[valid_owners >= TAB_MIN_ENTRIES].index.tolist()

# === Dash App ===
app = Dash(__name__)
app.title = "Task Owner Closure Code Dashboard"

# Tabs for each Task Owner
app.layout = html.Div([
    html.H1("Closure Code Breakdown by Task Owner"),
    dcc.Tabs(id="tabs", value=filtered_owners[0], children=[
        dcc.Tab(label=owner, value=owner) for owner in filtered_owners
    ]),
    html.Div(id='tab-content')
])

# Callback for tab switching
@app.callback(
    Output('tab-content', 'children'),
    [Input('tabs', 'value')]
)
def update_tab(selected_owner):
    owner_data = df[df['Task Owner'] == selected_owner]
    fig = px.pie(owner_data, names='Closure Code 1', title=f"{selected_owner}'s Closure Code Distribution")
    fig.update_traces(textinfo='percent+label')
    return dcc.Graph(figure=fig)

# === Launch the App and Auto-Open in Default Browser ===
def open_browser():
    webbrowser.open("http://127.0.0.1:8050")

if __name__ == '__main__':
    threading.Timer(1, open_browser).start()
    app.run(debug=False, port=8050)
