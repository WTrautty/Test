def generate_failure_analysis_tab(df):
    import pandas as pd
    import numpy as np
    from scipy.stats import chi2_contingency
    import plotly.graph_objects as go

    if "Revised LEC" not in df.columns or "Closure Code 1" not in df.columns:
        return "<div id='failureTab' class='main-tab'><h2>Required columns not found.</h2></div>"

    df = df.copy()
    df["Revised LEC"] = df["Revised LEC"].fillna("Unknown").astype(str)
    df["Is Fail"] = df["Closure Code 1"].str.lower().str.contains("fail|failed|failure", na=False).astype(int)

    # Create contingency table
    contingency = pd.crosstab(df["Revised LEC"], df["Is Fail"])

    # Compute Chi-squared and Cramér's V
    chi2, p, dof, expected = chi2_contingency(contingency)
    n = contingency.sum().sum()
    min_dim = min(contingency.shape) - 1
    cramers_v = np.sqrt(chi2 / (n * min_dim)) if min_dim > 0 else 0

    # Display in bar format
    fig = go.Figure(data=[
        go.Bar(
            x=["Cramér's V"],
            y=[cramers_v],
            text=[f"V = {cramers_v:.3f}<br>p = {p:.2e}"],
            textposition="auto",
            marker_color="#3498db"
        )
    ])
    fig.update_layout(
        title="Cramér's V: LEC vs. Failure",
        yaxis_title="Association Strength",
        yaxis=dict(range=[0, 1]),
        height=400
    )

    return f"""
    <div id="failureTab" class="main-tab">
      <h2>Failure Analysis</h2>
      <p>This chart shows the strength of association between 'Revised LEC' and failure outcomes using Cramér's V.</p>
      {fig.to_html(full_html=False, include_plotlyjs=False)}
    </div>
    """
