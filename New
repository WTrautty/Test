# === Load Multi-Sheet Excel File and Count End Dates per Month ===
ADDITIONAL_EXCEL = r"C:\Path\To\Your\MultiSheetWorkbook.xlsx"  # <-- UPDATE THIS PATH
end_month_data = []

# Load all sheets
xls = pd.read_excel(ADDITIONAL_EXCEL, sheet_name=None, engine='openpyxl')

for sheet_name, sheet_df in xls.items():
    if "End" in sheet_df.columns:
        sheet_df = sheet_df.dropna(subset=["End"])
        sheet_df["End"] = pd.to_datetime(sheet_df["End"], errors='coerce')
        sheet_df = sheet_df.dropna(subset=["End"])
        sheet_df["Month"] = sheet_df["End"].dt.to_period("M").astype(str)
        counts = sheet_df.groupby("Month").size().reset_index(name="Count")
        counts["Sheet"] = sheet_name
        end_month_data.append(counts)

# Combine all sheets into one DataFrame
combined_end_data = pd.concat(end_month_data, ignore_index=True)

# === Line Chart: Monthly Row Counts per Tab ===
line_fig_tabs = go.Figure()
for sheet in combined_end_data["Sheet"].unique():
    sheet_data = combined_end_data[combined_end_data["Sheet"] == sheet]
    line_fig_tabs.add_trace(go.Scatter(
        x=sheet_data["Month"],
        y=sheet_data["Count"],
        mode="lines+markers",
        name=sheet
    ))

line_fig_tabs.update_layout(
    title="Row Counts per Month by Tab (from Additional Workbook)",
    xaxis_title="Month",
    yaxis_title="Row Count",
    height=400,
    hovermode="x unified"
)

end_tab_chart_html = line_fig_tabs.to_html(full_html=False, include_plotlyjs=False, config={'responsive': True})
